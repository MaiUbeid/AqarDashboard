{"version":3,"sources":["app/services/estatesServices.js","app/views/estates/MatchedRequestsInEstate.jsx","app/views/estates/estateDetails.jsx"],"names":["getMatchedRequests","estateId","page","page_number","type","http","get","MatchedRequestsInEstate","state","userList","allList","sameList","pagesCount","loading","defaultSorted","dataField","order","getItemsList","limit","a","setState","then","res","console","log","data","current_page","total","columns","text","align","headerAlign","sortableColumn","sort","paginationOptions","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","length","this","props","axios","map","ind","id","name","email","age","company","balance","index","Search","SearchBar","bootstrap4","keyField","pagination","paginationFactory","noDataIndication","Component","EstatesDetails","itemId","itemDetails","estate","comforts","estate_file","provider","itemImages","match","params","routeSegments","path","estate_type_name_web","city_name","className","owner_name","dir","owner_mobile","formatDateTimeStamp","created_at","city_name_web","status_name","neighborhood_name_web","total_price","total_area","note","src","first_image","alt","address","Tabs","defaultActiveKey","Tab","eventKey","title"],"mappings":"iNAaaA,EAAqB,SAACC,EAAUC,EAAMC,EAAaC,GAC5D,OAAOC,IAAKC,IAAL,sCAAwCL,EAAxC,iBAAyDC,EAAzD,wBAA6EC,EAA7E,wBAAwGC,K,2GC+KpGG,E,4MAlLXC,M,aACIC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVV,SAAU,GACVG,KAAM,MACNF,KAAM,EACNU,WAAY,EACZT,YAAa,EACbU,SAAS,G,WACC,M,EAGdC,cAAgB,CACZ,CACIC,UAAW,OACXC,MAAO,Q,EAKfC,a,uCAAe,WAAOhB,EAAUiB,EAAOhB,EAAME,GAA9B,SAAAe,EAAA,sDACX,EAAKC,SAAS,CAAEP,SAAS,IACzBb,EACIC,EACAC,EACAgB,EACAd,GACFiB,MAAK,SAAAC,GACHC,QAAQC,IAAIF,GACZ,IAAIZ,EAAU,GACVC,EAAW,GACJ,OAARP,EACCM,EAAO,YAAOY,EAAIG,KAAKA,KAAKA,MAE5Bd,EAAQ,YAAOW,EAAIG,KAAKA,KAAKA,MAEjC,EAAKL,SAAS,CACVV,QAAQ,YAAKA,GACbC,SAAS,YAAKA,GACdT,KAAMoB,EAAIG,KAAKA,KAAKC,aACpBd,WAAYU,EAAIG,KAAKA,KAAKE,MAC1Bd,SAAS,OArBN,2C,8DAkDfe,QAAU,CACN,CACIb,UAAW,QACXc,KAAM,MAEV,CACId,UAAW,OACXc,KAAM,aAEV,CACId,UAAW,QACXc,KAAM,cAEV,CACId,UAAW,UACXc,KAAM,WAEV,CACId,UAAW,UACXc,KAAM,UACNC,MAAO,SACPC,YAAa,UAEjB,CACIhB,UAAW,MACXc,KAAM,MACNC,MAAO,SACPC,YAAa,W,EAIrBC,eAAiB,CACb,CACIjB,UAAW,QACXc,KAAM,KACNI,MAAM,GAEV,CACIlB,UAAW,OACXc,KAAM,YACNI,MAAM,GAEV,CACIlB,UAAW,QACXc,KAAM,aACNI,MAAM,GAEV,CACIlB,UAAW,UACXc,KAAM,UACNI,MAAM,GAEV,CACIlB,UAAW,UACXc,KAAM,UACNI,MAAM,EACNH,MAAO,SACPC,YAAa,UAEjB,CACIhB,UAAW,MACXc,KAAM,MACNI,MAAM,EACNH,MAAO,SACPC,YAAa,W,EAIrBG,kBAAoB,CAEhBC,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAW,EAAKtC,MAAMC,SAASsC,Q,uDAzGnC,WAAqB,IAAD,OAEhBC,KAAK5B,SAAS,CAAEnB,SAAU+C,KAAKC,MAAMhD,WACT,OAAxB+C,KAAKC,MAAMhD,WACP+C,KAAK/B,aAAa+B,KAAKC,MAAMhD,SAAU+C,KAAKxC,MAAML,YAAa6C,KAAKxC,MAAMN,KAAM,OAChF8C,KAAK/B,aAAa+B,KAAKC,MAAMhD,SAAU+C,KAAKxC,MAAML,YAAa6C,KAAKxC,MAAMN,KAAM,SAGxFgD,IAAM5C,IAAI,iBAAiBe,MAAK,YAAe,IACvCZ,EADsC,EAAXgB,KACX0B,KAChB,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,QAAzB,MAAsD,CAClDJ,KACAC,OACAC,QACAC,MACAE,QALJ,EAAkCA,QAM9BD,UACAE,MAAOP,EAAM,MAGrB,EAAKhC,SAAS,CAAEX,kB,oBAwFxB,WAAU,IACAA,EAAauC,KAAKxC,MAAlBC,SACcmD,SAAdC,UAEN,OACI,6BAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,YAAU,EACVC,SAAS,KACTtC,KAAMhB,EACNmB,QAASoB,KAAKhB,eACdlB,cAAekC,KAAKlC,cACpBkD,WAAYC,IAAkBjB,KAAKd,mBACnCgC,iBAAkB,yB,GA3KJC,a,mBCDhCC,E,4MACF5D,MAAQ,CACJK,SAAS,EACTwD,OAAQ,GACRC,YAAa,CACTC,OAAQ,CACJC,SAAU,GACVC,YAAa,IAEjBC,SAAU,IAEdC,WAAY,I,uDAIhB,WAAqB,IFhBMtB,EEgBP,OAChBL,KAAK5B,SAAS,CAAEP,SAAS,IACzBmC,KAAK5B,SAAS,CAAEiD,OAAQrB,KAAKC,MAAM2B,MAAMC,OAAOxB,KACb,OAA/BL,KAAKC,MAAM2B,MAAMC,OAAOxB,KFnBLA,EEoBJL,KAAKC,MAAM2B,MAAMC,OAAOxB,GFnBxChD,IAAKC,IAAL,sBAAwB+C,EAAxB,WEmB4ChC,MAAK,SAAAC,GAC5C,EAAKF,SAAS,CAAEkD,YAAahD,EAAIG,KAAKA,KAAMZ,SAAS,S,oBAKjE,WAAU,IAAD,EAKDmC,KAAKxC,MAHLK,EAFC,EAEDA,QAEAyD,GAJC,EAGDD,OAHC,EAIDC,aAEJ,OACI,6BACI,kBAAC,IAAD,CACIQ,cAAe,CACX,CAAExB,KAAM,mDAAYyB,KAAM,KAC1B,CAAEzB,KAAK,GAAD,OAAKgB,EAAYU,qBAAjB,wDAAkDV,EAAYW,eAG5E,yBAAKC,UAAU,0BACVrE,GAAW,kBAAC,IAAD,MAEZ,yBAAKqE,UAAS,0BAAqBrE,EAAU,YAAc,YACvD,yGACA,6BACA,yBAAKqE,UAAU,OACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,qBAAb,2DACA,kCAAQZ,EAAYa,aAExB,yBAAKD,UAAU,QACX,uBAAGA,UAAU,qBAAb,2DACA,0BAAME,IAAI,OAAOd,EAAYe,aAA7B,MAEJ,yBAAKH,UAAU,QACX,uBAAGA,UAAU,qBAAb,6EACA,8BAAOI,YAAoBhB,EAAYiB,eAG/C,yBAAKL,UAAU,kBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,qBAAb,8CACA,8BAAOZ,EAAYkB,gBAEvB,yBAAKN,UAAU,QACX,uBAAGA,UAAU,qBAAb,yCACA,8BAAOZ,EAAYmB,cAEvB,yBAAKP,UAAU,QACX,uBAAGA,UAAU,qBAAb,2DACA,8BAAOZ,EAAYU,uBAEvB,yBAAKE,UAAU,QACX,uBAAGA,UAAU,qBAAb,4BACA,8BAAOZ,EAAYoB,wBAEvB,yBAAKR,UAAU,QACX,uBAAGA,UAAU,qBAAb,kCACA,8BAAOZ,EAAYqB,cAEvB,yBAAKT,UAAU,QACX,uBAAGA,UAAU,qBAAb,mFACA,8BAAOZ,EAAYsB,aAEvB,yBAAKV,UAAU,QACX,uBAAGA,UAAU,qBAAb,8CACA,8BAAOZ,EAAYuB,QAI3B,yBAAKX,UAAU,YACX,yBAAKA,UAAU,yCACX,yBACIA,UAAU,WACVY,IAAKxB,EAAYyB,YACjBC,IAAI,SAER,yBAAKd,UAAU,oBACX,wBAAIA,UAAU,yBAAd,8CACA,uBAAGA,UAAU,aAAaZ,EAAY2B,aAUtD,6BACA,kBAACC,EAAA,EAAD,CAAMC,iBAAiB,0BACnB,kBAACC,EAAA,EAAD,CAAKC,SAAS,yBAAyBC,MAAM,+FACxChC,EAAYjB,GAAK,kBAAC,EAAD,CAAyBpD,SAAUqE,EAAYjB,KAAiC,MAEtG,kBAAC+C,EAAA,EAAD,CAAKC,SAAS,kBAAkBC,MAAM,+FACjChC,EAAYjB,GAAK,kBAAC,EAAD,CAAyBpD,SAAUqE,EAAYjB,KAAiC,c,GApHrGc,aAyIdC","file":"static/js/30.dbcb414c.chunk.js","sourcesContent":["import http from \"../../http-common\";\n\n// Get All\n// export const getList = (page, state_id, status, time, estate_type_id, area_estate_id, dir_estate_id, estate_price_id, city_id, neighborhood_id, form_date, to_date, page_number, uuid) => {\n//     return http.get(`fund/offers?page=${page}&state_id=${state_id}&status=${status}&time=${time}&estate_type_id=${estate_type_id}&area_estate_id=${area_estate_id}&dir_estate_id=${dir_estate_id}&estate_price_id=${estate_price_id}&city_id=${city_id}&neighborhood_id=${neighborhood_id}&form_date=${form_date}&to_date=${to_date}&page_number=${page_number}&uuid=${uuid}`);\n// };\n\n// fund/estate/1253/show\nexport const getItemDetails = (id) => {\n    return http.get(`fund/estate/${id}/show`);\n}\n\n// fund/available/fund/request/1181?search_type=all\nexport const getMatchedRequests = (estateId, page, page_number, type) => {\n    return http.get(`fund/available/fund/request/${estateId}?page=${page}&page_number=${page_number}&search_type=${type}`);\n}\n","import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport { SimpleCard } from \"@gull\";\r\nimport axios from \"axios\";\r\nimport { getMatchedRequests } from '../../services/estatesServices';\r\n\r\n\r\nclass MatchedRequestsInEstate extends Component {\r\n    state = {\r\n        userList: [],\r\n        allList: [],\r\n        sameList: [],\r\n        estateId: '',\r\n        type: 'all',\r\n        page: 1,\r\n        pagesCount: 0,\r\n        page_number: 0,\r\n        loading: false,\r\n        estateId: null\r\n    };\r\n\r\n    defaultSorted = [\r\n        {\r\n            dataField: \"name\",\r\n            order: \"asc\"\r\n        }\r\n    ];\r\n\r\n    // get items list\r\n    getItemsList = async (estateId, limit, page, type) => {\r\n        this.setState({ loading: true });\r\n        getMatchedRequests(\r\n            estateId,\r\n            page,\r\n            limit,\r\n            type\r\n        ).then(res => {\r\n            console.log(res);\r\n            let allList = [];\r\n            let sameList = [];\r\n            if(type == 'all') {\r\n                allList = [...res.data.data.data];\r\n            } else {\r\n                sameList = [...res.data.data.data];\r\n            }\r\n            this.setState({\r\n                allList: [...allList],\r\n                sameList: [...sameList],\r\n                page: res.data.data.current_page,\r\n                pagesCount: res.data.data.total,\r\n                loading: false\r\n            })\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n \r\n        this.setState({ estateId: this.props.estateId });\r\n        if (this.props.estateId !== null) {\r\n                this.getItemsList(this.props.estateId, this.state.page_number, this.state.page, 'all');\r\n                this.getItemsList(this.props.estateId, this.state.page_number, this.state.page, 'same');\r\n        }\r\n\r\n        axios.get(\"/api/user/all\").then(({ data }) => {\r\n            let userList = data.map(\r\n                ({ id, name, email, age, company, balance }, ind) => ({\r\n                    id,\r\n                    name,\r\n                    email,\r\n                    age,\r\n                    balance,\r\n                    company,\r\n                    index: ind + 1\r\n                })\r\n            );\r\n            this.setState({ userList });\r\n        });\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            dataField: \"index\",\r\n            text: \"No\"\r\n        },\r\n        {\r\n            dataField: \"name\",\r\n            text: \"User Name\"\r\n        },\r\n        {\r\n            dataField: \"email\",\r\n            text: \"User Email\"\r\n        },\r\n        {\r\n            dataField: \"company\",\r\n            text: \"Company\"\r\n        },\r\n        {\r\n            dataField: \"balance\",\r\n            text: \"Balance\",\r\n            align: \"center\",\r\n            headerAlign: \"center\"\r\n        },\r\n        {\r\n            dataField: \"age\",\r\n            text: \"Age\",\r\n            align: \"center\",\r\n            headerAlign: \"center\"\r\n        }\r\n    ];\r\n\r\n    sortableColumn = [\r\n        {\r\n            dataField: \"index\",\r\n            text: \"No\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"name\",\r\n            text: \"User Name\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"email\",\r\n            text: \"User Email\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"company\",\r\n            text: \"Company\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"balance\",\r\n            text: \"Balance\",\r\n            sort: true,\r\n            align: \"center\",\r\n            headerAlign: \"center\"\r\n        },\r\n        {\r\n            dataField: \"age\",\r\n            text: \"Age\",\r\n            sort: true,\r\n            align: \"center\",\r\n            headerAlign: \"center\"\r\n        }\r\n    ];\r\n\r\n    paginationOptions = {\r\n        // custom: true,\r\n        paginationSize: 5,\r\n        pageStartIndex: 1,\r\n        firstPageText: \"First\",\r\n        prePageText: \"Back\",\r\n        nextPageText: \"Next\",\r\n        lastPageText: \"Last\",\r\n        nextPageTitle: \"First page\",\r\n        prePageTitle: \"Pre page\",\r\n        firstPageTitle: \"Next page\",\r\n        lastPageTitle: \"Last page\",\r\n        showTotal: true,\r\n        totalSize: this.state.userList.length\r\n    };\r\n\r\n    render() {\r\n        let { userList } = this.state;\r\n        let { SearchBar } = Search;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <SimpleCard>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={userList}\r\n                        columns={this.sortableColumn}\r\n                        defaultSorted={this.defaultSorted}\r\n                        pagination={paginationFactory(this.paginationOptions)}\r\n                        noDataIndication={\"Table is empty\"}\r\n                    />\r\n                </SimpleCard>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MatchedRequestsInEstate;\r\n","import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { formatDateTimeStamp } from \"@utils\";\r\nimport { getItemDetails } from '../../services/estatesServices';\r\nimport { Loading } from \"@gull\";\r\nimport MatchedRequestsInEstate from './MatchedRequestsInEstate';\r\nimport { Tabs, Tab, ProgressBar, Card } from \"react-bootstrap\";\r\n\r\n\r\nclass EstatesDetails extends Component {\r\n    state = {\r\n        loading: false,\r\n        itemId: '',\r\n        itemDetails: {\r\n            estate: {\r\n                comforts: [],\r\n                estate_file: []\r\n            },\r\n            provider: {}\r\n        },\r\n        itemImages: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.setState({ itemId: this.props.match.params.id });\r\n        if (this.props.match.params.id !== null) {\r\n            getItemDetails(this.props.match.params.id).then(res => {\r\n                this.setState({ itemDetails: res.data.data, loading: false });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            loading,\r\n            itemId,\r\n            itemDetails\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: \"الرئيسية\", path: \"/\" },\r\n                        { name: `${itemDetails.estate_type_name_web} في مدينة ${itemDetails.city_name}` }\r\n                    ]}\r\n                ></Breadcrumb>\r\n                <div className=\"card m-sm-30 text-left\">\r\n                    {loading && <Loading></Loading>}\r\n\r\n                    <div className={`card-body pt-4  ${loading ? 'invisible' : 'visible'}`}>\r\n                        <h4>تفاصيل العقار</h4>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-6\">\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">اسم المالك</p>\r\n                                    <span> {itemDetails.owner_name}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">رقم المالك</p>\r\n                                    <span dir=\"ltr\">{itemDetails.owner_mobile} </span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">تاريخ الانشاء</p>\r\n                                    <span>{formatDateTimeStamp(itemDetails.created_at)}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-6\">\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">المدينة</p>\r\n                                    <span>{itemDetails.city_name_web}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\"> الحالة</p>\r\n                                    <span>{itemDetails.status_name}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">نوع العقار</p>\r\n                                    <span>{itemDetails.estate_type_name_web}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">الحي</p>\r\n                                    <span>{itemDetails.neighborhood_name_web}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">السعر</p>\r\n                                    <span>{itemDetails.total_price}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">إجمالي المساحة</p>\r\n                                    <span>{itemDetails.total_area}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">ملاحظات</p>\r\n                                    <span>{itemDetails.note}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card bg-dark text-white o-hidden mb-4\">\r\n                                    <img\r\n                                        className=\"card-img\"\r\n                                        src={itemDetails.first_image}\r\n                                        alt=\"Card\"\r\n                                    />\r\n                                    <div className=\"card-img-overlay\">\r\n                                        <h5 className=\"card-title text-white\">العنوان</h5>\r\n                                        <p className=\"card-text\">{itemDetails.address}</p>\r\n                                        {/* <p className=\"card-text\">\r\n                                            {itemDetails.comforts.map((item, ind) => (\r\n                                                <img width=\"50\" className=\"p-1\" key={ind} src={item.icon} alt={item.name_ar} />\r\n                                            ))}\r\n                                        </p> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <Tabs defaultActiveKey=\"MatchedOffersInRequest\">\r\n                            <Tab eventKey=\"MatchedOffersInRequest\" title=\"الطلبات المطابقة\">\r\n                                {itemDetails.id ? <MatchedRequestsInEstate estateId={itemDetails.id}></MatchedRequestsInEstate> : null}\r\n                            </Tab>\r\n                            <Tab eventKey=\"OffersInRequest\" title=\"الطلبات المقاربة\">\r\n                                {itemDetails.id ? <MatchedRequestsInEstate estateId={itemDetails.id}></MatchedRequestsInEstate> : null}\r\n\r\n                            </Tab>\r\n                        </Tabs>\r\n                        {/* <h3 className=\"mb-2\">صور العرض</h3> */}\r\n                        {/* <div className=\"row\">\r\n                            {\r\n                                itemDetails.estate.estate_file.map((item, ind) => (\r\n                                    <div className=\"col-md-4\">\r\n                                        <a key={ind} href={item.file} target=\"_blank\"><img className=\"img-thumbnail\" src={item.file} /></a>\r\n                                    </div>\r\n                                ))}\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EstatesDetails;\r\n"],"sourceRoot":""}