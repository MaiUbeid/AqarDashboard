{"version":3,"sources":["app/views/requests/MatchedOffersInRequest.jsx","app/views/requests/requestsDetails.jsx","@gull/components/buttons/LoadingButton.jsx","app/services/requestsService.js"],"names":["MatchedOffersInRequest","props","useState","savingSpinner","page_number","setPageNumber","page","setPage","offers","matchedList","setMatchedList","isInitialMount","useRef","useEffect","current","uuid","a","getData","type","populateData","limit","getMatchedOffers","Res","data","onSubmit","estate_id","values","swal","fire","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","then","result","isConfirmed","sendMatchedOffer","isDenied","length","className","id","slice","map","item","ind","key","valign","estate_type_name_web","owner_name","status","dir","city_name","neighborhood_name_web","total_price","total_area","OverlayTrigger","placement","overlay","Tooltip","to","LoadingButton","loading","animation","spinnerSize","onClick","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","ceil","total","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","value","onChange","target","RequestsDetails","state","itemId","itemDetails","this","setState","match","params","getItemDetails","res","routeSegments","name","path","area_estate_range","city_name_web","formatDateTimeStamp","created_at","estate_price_range","estate_status","neighborhood_name","street_view_range","count_offers","Tabs","defaultActiveKey","Tab","eventKey","Component","variant","buttonSize","children","disabled","size","getList","state_id","offer_status","time","estate_type_id","area_estate_id","dir_estate_id","estate_price_id","city_id","neighborhood_id","form_date","to_date","http","get","body","post"],"mappings":"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","file":"static/js/18.ed0f98f4.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { OverlayTrigger, Tooltip, Alert } from \"react-bootstrap\";\r\nimport { formatDateTimeStamp } from \"@utils\";\r\nimport { sendMatchedOffer, getMatchedOffers } from '../../services/requestsService';\r\nimport LoadingButton from \"@gull/components/buttons/LoadingButton\";\r\nimport swal from \"sweetalert2\";\r\n\r\nconst MatchedOffersInRequest = (props) => {\r\n    const [savingSpinner, setsavingSpinner] = useState(false);\r\n    const [page_number, setPageNumber] = useState(10);\r\n    const [page, setPage] = useState();\r\n    const [matchedList, setMatchedList] = useState(props.offers);\r\n    const isInitialMount = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            if(props.uuid)\r\n                setPage(1);\r\n            // isInitialMount.current = false;\r\n        } else {\r\n            // Your useEffect code here to be run on update\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function populateData() {\r\n            getData(props.uuid, page, page_number, props.type);\r\n        }\r\n        populateData();\r\n    }, [page]);\r\n\r\n    const getData = async (uuid, page, limit, type) => {\r\n        try {\r\n            \r\n            if (!props.uuid) return;\r\n            const Res = await getMatchedOffers(uuid, page, limit, type);\r\n            setMatchedList(Res.data.data);\r\n            isInitialMount.current = false;\r\n\r\n        } catch (ex) {\r\n            // Console err\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (estate_id) => {\r\n        // setsavingSpinner(true);\r\n\r\n        // try {\r\n        //     let { uuid } = props.uuid;\r\n        //     var res;\r\n        //     var values = {\r\n        //         estate_id: estate_id,\r\n        //         uuid: props.uuid\r\n        //     };\r\n\r\n        //     res = await sendMatchedOffer(values);\r\n        // } catch (ex) {\r\n        //     setsavingSpinner(false);\r\n        // }\r\n        var values = {\r\n            estate_id: estate_id,\r\n            uuid: props.uuid\r\n        };\r\n\r\n        swal.fire({\r\n            title: 'تأكيد أرسال العرض؟',\r\n            showDenyButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: `تأكيد`,\r\n            denyButtonText: `إلغاء`,\r\n            cancelButtonText: `إلغاء`,\r\n        }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                sendMatchedOffer(values);\r\n                swal.fire('تم حفظ التغييرات!', '', 'success');\r\n\r\n            } else if (result.isDenied) {\r\n                // swal.fire('لم يتم تغيير', '', 'info')\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {matchedList.data && matchedList.data.length > 0\r\n                ? <div>\r\n                    <div className=\"table-responsive mt-2\">\r\n                        <table id=\"excel-table\" className=\"display table w-100\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>نوع العقار</th>\r\n                                    <th>اسم المكتب</th>\r\n                                    <th>حالة العرض</th>\r\n                                    <th>المدينة</th>\r\n                                    <th>الحي</th>\r\n                                    <th>السعر</th>\r\n                                    <th>المساحه</th>\r\n                                    <th>العمليات</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {matchedList.data\r\n                                    .slice(0, page_number)\r\n                                    .map((item, ind) => (\r\n                                        <tr key={ind}>\r\n                                            <td valign=\"middle\">\r\n                                                <div className=\"ul-widget-app__profile-pic\">\r\n                                                    {item.id}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.estate_type_name_web}</td>\r\n                                            <td>{item.owner_name}</td>\r\n                                            <td valign=\"middle\">\r\n                                                <div className='badge badge-info p-2 text-capitalize'>\r\n                                                    {item.status == '1' ? 'متاح' : 'غير متاح'}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td dir=\"ltr\">{item.city_name}</td>\r\n                                            <td>{item.neighborhood_name_web}</td>\r\n                                            <td>{item.total_price}</td>\r\n                                            <td>{item.total_area}</td>\r\n                                            <td>\r\n                                                <div className=\"d-flex\">\r\n                                                    <OverlayTrigger placement={\"top\"} overlay={<Tooltip id=\"tooltip-top\">عرض التفاصيل</Tooltip>}>\r\n                                                        <Link to={`/estate/${item.id}`} className=\"btn btn-light btn-md m-1 mt-3\">\r\n                                                            <i className=\"i-Eye\"></i>\r\n                                                        </Link>\r\n                                                    </OverlayTrigger>\r\n                                                    <LoadingButton\r\n                                                        className=\"btn btn-primary btn-md m-1 mt-3\"\r\n                                                        loading={savingSpinner}\r\n                                                        animation=\"border\"\r\n                                                        spinnerSize=\"sm\">\r\n                                                        <span onClick={() => onSubmit(item.id)}> إرسال العرض</span>\r\n                                                    </LoadingButton>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end mr-lg-4\">\r\n                        <div className=\"col-sm-12 col-md-6 mb-2\">\r\n\r\n                            <ReactPaginate\r\n                                previousLabel={\"السابق\"}\r\n                                nextLabel={\"التالي\"}\r\n                                breakLabel={\"...\"}\r\n                                breakClassName={\"break-me\"}\r\n                                pageCount={Math.ceil(matchedList.total / page_number)}\r\n                                marginPagesDisplayed={2}\r\n                                pageRangeDisplayed={3}\r\n                                onPageChange={data => { setPage(data.selected + 1) }}\r\n                                containerClassName={\"pagination pagination-lg\"}\r\n                                subContainerClassName={\"pages pagination\"}\r\n                                activeClassName={\"active\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-6 mb-2\">\r\n                            <div className=\"d-flex align-items-center float-right\">\r\n                                <span className=\"mr-1\">عناصر</span>\r\n                                <div className=\"mr-1\">\r\n                                    <select\r\n                                        value={page_number}\r\n                                        className=\"form-control\"\r\n                                        onChange={({ target: { value } }) => {\r\n                                            setPageNumber(value);\r\n                                            setPage(1);\r\n                                        }}>\r\n                                        <option value={10}>10</option>\r\n                                        <option value={25}>25</option>\r\n                                        <option value={50}>50</option>\r\n                                        <option value={100}>100</option>\r\n                                    </select>\r\n                                </div>\r\n                                <span>عرض</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <div className=\"alert alert-info\">\r\n                    لا يوجد بيانات\r\n                  </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MatchedOffersInRequest;","import React, { Component } from \"react\";\r\nimport { Tabs, Tab, ProgressBar } from \"react-bootstrap\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { formatDateTimeStamp } from \"@utils\";\r\nimport { getItemDetails, getMatchedOffers } from '../../services/requestsService';\r\nimport { Loading } from \"@gull\";\r\nimport OffersInRequest from './OffersInRequest';\r\nimport MatchedOffersInRequest from './MatchedOffersInRequest';\r\n\r\nclass RequestsDetails extends Component {\r\n    state = {\r\n        loading: false,\r\n        itemId: '',\r\n        itemDetails: {},\r\n        matchedList: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.setState({ itemId: this.props.match.params.id });\r\n        if (this.props.match.params.id !== null) {\r\n            getItemDetails(this.props.match.params.id).then(res => {\r\n                this.setState({ itemDetails: res.data.data, loading: false });\r\n                // getMatchedOffers(this.state.itemDetails.uuid, 0, 15).then(matchedList => {\r\n                //     this.setState({ matchedList: matchedList.data.data });\r\n                // });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            loading,\r\n            itemId,\r\n            itemDetails,\r\n            matchedList\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: \"الرئيسية\", path: \"/\" },\r\n                        { name: \"قائمة الطلبات\", path: \"/requests\" },\r\n                        { name: itemDetails.uuid }\r\n                    ]}\r\n                ></Breadcrumb>\r\n                <div className=\"card m-sm-30 text-left\">\r\n                    {loading && <Loading></Loading>}\r\n\r\n                    <div className={`card-body pt-4  ${loading ? 'invisible' : 'visible'}`}>\r\n                        <h4>تفاصيل الطلب</h4>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-6\">\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">المساحة</p>\r\n                                    <span> {itemDetails.area_estate_range}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">المدينة</p>\r\n                                    <span>{itemDetails.city_name_web} </span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">تاريخ انشاء الطلب</p>\r\n                                    <span>{formatDateTimeStamp(itemDetails.created_at)}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-6\">\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">السعر</p>\r\n                                    <span>{itemDetails.estate_price_range}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\"> الحالة</p>\r\n                                    <span>{itemDetails.estate_status}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">نوع العقار</p>\r\n                                    <span>{itemDetails.estate_type_name_web}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-6\">\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">الحي</p>\r\n                                    <span>{itemDetails.neighborhood_name}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">مساحة الشارع</p>\r\n                                    <span>{itemDetails.street_view_range}</span>\r\n                                </div>\r\n                                <div className=\"mb-4\">\r\n                                    <p className=\"text-primary mb-1\">عدد العروض المقدمة</p>\r\n                                    <span>{itemDetails.count_offers}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <hr />\r\n                                <Tabs defaultActiveKey=\"MatchedOffersInRequest\">\r\n                                    <Tab eventKey=\"MatchedOffersInRequest\" title=\"العروض المطابقة\">\r\n                                        <MatchedOffersInRequest offers={matchedList} uuid={itemDetails.uuid} type={`same`} ></MatchedOffersInRequest>\r\n                                    </Tab>\r\n                                    <Tab eventKey=\"OffersInRequest\" title=\"العروض المقاربة\">\r\n                                        <MatchedOffersInRequest offers={matchedList} uuid={itemDetails.uuid} type={`all`} ></MatchedOffersInRequest>\r\n                                    </Tab>\r\n                                </Tabs>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RequestsDetails;\r\n","import React from \"react\";\r\nimport { Spinner, Button } from \"react-bootstrap\";\r\n\r\nconst LoadingButton = ({\r\n  variant = \"primary\",\r\n  loading = false,\r\n  animation,\r\n  spinnerSize,\r\n  buttonSize,\r\n  children,\r\n  className\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      disabled={loading}\r\n      className={`d-flex flex-row align-items-center ${className}`}\r\n      size={buttonSize}\r\n    >\r\n      {loading && (\r\n        <Spinner className=\"mr-2\" animation={animation} size={spinnerSize} />\r\n      )}\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import http from \"../../http-common\";\n\n// Get All\nexport const getList = (page, state_id, offer_status, time, estate_type_id, area_estate_id, dir_estate_id, estate_price_id, city_id, neighborhood_id, form_date, to_date, page_number, uuid) => {\n    return http.get(`fund/requests?page=${page}&state_id=${state_id}&offer_status=${offer_status}&time=${time}&estate_type_id=${estate_type_id}&area_estate_id=${area_estate_id}&dir_estate_id=${dir_estate_id}&estate_price_id=${estate_price_id}&city_id=${city_id}&neighborhood_id=${neighborhood_id}&form_date=${form_date}&to_date=${to_date}&page_number=${page_number}&uuid=${uuid}`);\n};\n\nexport const getItemDetails = (id) => {\n    return http.get(`fund/request/${id}/show`);\n}\n\n// fund/available/estate/offers/56fef866-88c0-4bfe-ac9f-133aeeda13bd?search_type=all\nexport const getMatchedOffers = (uuid, page, page_number, type) => {\n    return http.get(`fund/available/estate/offers/${uuid}?page=${page}&page_number=${page_number}&search_type=${type}`);\n}\n\n// fund/send/offer/fund/dash\nexport const sendMatchedOffer = (body) => {\n    return http.post(`fund/send/offer/fund/dash`, body);\n}\n"],"sourceRoot":""}