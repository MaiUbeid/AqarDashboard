{"version":3,"sources":["app/views/common/EstateCard.jsx","app/views/estates/estateList.jsx"],"names":["EstateCard","imageUrl","useState","open","setOpen","Card","border","className","onPointerOver","onPointerOut","aria-controls","aria-expanded","Img","variant","src","Fade","in","ImgOverlay","id","type","onClick","estateList","state","page","pagesCount","loading","list","data","states","value","cities","neighborhood","typeList","areaList","priceList","page_number","estates","name","image","reason","this","routeSegments","path","map","item","key","Component"],"mappings":"0NAsCeA,MAnCf,YAAmC,IAAbC,EAAY,EAAZA,SAAY,EACNC,oBAAS,GADH,mBACvBC,EADuB,KACjBC,EADiB,KAG9B,OACI,kBAACC,EAAA,EAAD,CAAMC,OAAO,UAAUC,UAAU,sCAC7BC,cAAe,kBAAMJ,GAASD,IAC9BM,aAAc,kBAAML,GAAQ,IAC5BM,gBAAc,WACdC,gBAAeR,GACf,kBAACE,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMC,IAAKb,IAC7B,kBAACc,EAAA,EAAD,CAAMC,GAAIb,GACN,kBAACE,EAAA,EAAKY,WAAN,KACI,yBAAKC,GAAG,WAAWX,UAAU,wBACzB,4BACIY,KAAK,SACLZ,UAAU,6BACVa,QAAS,cAHb,4BAOA,4BACID,KAAK,SACLZ,UAAU,4BACVa,QAAS,cAHb,2BCTlBC,E,4MACFC,MAAQ,CACJC,KAAM,EACNC,WAAY,EACZC,SAAS,EACTC,KAAM,GACNC,KAAM,GACNC,OAAQ,CACJ,CACIC,MAAO,uCACPX,GAAI,IAGZY,OAAQ,GACRC,aAAc,GACdC,SAAU,GACVC,SAAU,GACVC,UAAW,GAEXC,YAAa,GACbC,QAAS,CAAC,CAAElB,GAAI,EAAGmB,KAAM,4BAASC,MAAO,gKAAiKC,OAAQ,IAAM,CAAErB,GAAI,EAAGmB,KAAM,4BAASC,MAAO,gKAAiKC,OAAQ,IAAM,CAAErB,GAAI,EAAGmB,KAAM,4BAASC,MAAO,gKAAiKC,OAAQ,IAAM,CAAErB,GAAI,EAAGmB,KAAM,4BAASC,MAAO,gKAAiKC,OAAQ,IAAM,CAAErB,GAAI,EAAGmB,KAAM,4BAASC,MAAO,gKAAiKC,OAAQ,IAAM,CAAErB,GAAI,EAAGmB,KAAM,4BAASC,MAAO,gKAAiKC,OAAQ,M,4CA+K5tC,WAAU,IAAD,EACsBC,KAAKlB,MAA1BG,EADD,EACCA,QAASW,EADV,EACUA,QAEf,OACI,6BACI,kBAAC,IAAD,CACIK,cAAe,CACX,CAAEJ,KAAM,mDAAYK,KAAM,KAC1B,CAAEL,KAAM,uFAIhB,6BAAS9B,UAAU,gBACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,iBACV6B,EAAQO,KAAI,SAAAC,GACT,OACI,yBAAKrC,UAAU,YACX,kBAAC,EAAD,CAAYsC,IAAKD,EAAK1B,GAAIjB,SAAU2C,EAAKN,aAKxDb,GAAW,kBAAC,IAAD,e,GA5NnBqB,aAsOVzB","file":"static/js/31.c347225d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Fade } from \"react-bootstrap\";\r\n\r\nfunction EstateCard({ imageUrl }) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <Card border=\"primary\" className=\"bg-dark text-white text-center mb-4\"\r\n            onPointerOver={() => setOpen(!open)}\r\n            onPointerOut={() => setOpen(false)}\r\n            aria-controls=\"fade-div\"\r\n            aria-expanded={open}>\r\n            <Card.Img variant=\"top\" src={imageUrl} />\r\n            <Fade in={open}>\r\n                <Card.ImgOverlay>\r\n                    <div id=\"fade-div\" className=\"flex justify-content\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-success btn-md m-3\"\r\n                            onClick={() => undefined}\r\n                        >\r\n                            قبول\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger btn-md m-3\"\r\n                            onClick={() => undefined}\r\n                        >\r\n                            رفض\r\n                        </button>\r\n                    </div>\r\n                </Card.ImgOverlay>\r\n            </Fade>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default EstateCard;","import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\n// import { getList } from '../../services/estatesServices';\r\n// import {\r\n//     getCities,\r\n//     getStates,\r\n//     getNeighborhood,\r\n//     geAreaList,\r\n//     geTypeList,\r\n//     gePriceList\r\n// } from '../../services/settingsServcie';\r\nimport { Loading } from \"@gull\";\r\nimport EstateCard from '../common/EstateCard';\r\n\r\nclass estateList extends Component {\r\n    state = {\r\n        page: 1,\r\n        pagesCount: 0,\r\n        loading: false,\r\n        list: [],\r\n        data: '',\r\n        states: [\r\n            {\r\n                value: \"الرياض\",\r\n                id: 1\r\n            }\r\n        ],\r\n        cities: [],\r\n        neighborhood: [],\r\n        typeList: [],\r\n        areaList: [],\r\n        priceList: [],\r\n\r\n        page_number: 10, // limit items\r\n        estates: [{ id: 1, name: ' فيلا', image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', reason: '' }, { id: 2, name: ' فيلا', image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', reason: '' }, { id: 3, name: ' فيلا', image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', reason: '' }, { id: 4, name: ' فيلا', image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', reason: '' }, { id: 5, name: ' فيلا', image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', reason: '' }, { id: 6, name: ' فيلا', image: 'https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80', reason: '' }]\r\n    };\r\n\r\n\r\n    //   updatePageData = () => {\r\n    //     getStates().then(res => {\r\n    //       this.setState({ states: res.data.data });\r\n    //     });\r\n\r\n    //     geAreaList().then(res => {\r\n    //       this.setState({ areaList: res.data.data });\r\n    //     });\r\n\r\n    //     geTypeList().then(res => {\r\n    //       this.setState({ typeList: res.data.data });\r\n    //     });\r\n\r\n    //     gePriceList().then(res => {\r\n    //       this.setState({ priceList: res.data.data });\r\n    //     });\r\n    //     this.getItemsList(this.state.page_number, this.state.page);\r\n    //   };\r\n\r\n    //   // get items list\r\n    //   getItemsList = async (limit, page) => {\r\n    //     this.setState({ loading: true });\r\n    //     getList(\r\n    //       page,\r\n    //       this.state.state_id,\r\n    //       this.state.status,\r\n    //       this.state.time,\r\n    //       this.state.estate_type_id,\r\n    //       this.state.area_estate_id,\r\n    //       this.state.dir_estate_id,\r\n    //       this.state.estate_price_id,\r\n    //       this.state.city_id,\r\n    //       this.state.neighborhood_id,\r\n    //       this.state.form_date,\r\n    //       this.state.to_date,\r\n    //       limit,\r\n    //       this.state.uuid\r\n    //     ).then(res => {\r\n    //       let list = [...res.data.data.data];\r\n    //       this.setState({\r\n    //         list: [...list],\r\n    //         page: res.data.data.current_page,\r\n    //         pagesCount: res.data.data.total,\r\n    //         loading: false\r\n    //       })\r\n    //     });\r\n    //   }\r\n\r\n    //   onStatesChange = (e) => {\r\n    //     if (e !== '') {\r\n    //       getCities(e).then(res =>\r\n    //         this.setState({\r\n    //           cities: res.data.data\r\n    //         })\r\n    //       );\r\n    //     } else {\r\n    //       this.setState({\r\n    //         neighborhood: [],\r\n    //         cities: []\r\n    //       })\r\n    //     }\r\n    //   };\r\n\r\n    //   onCitiesChange = (e) => {\r\n    //     if (e[0] && e[0].serial_city) {\r\n    //       getNeighborhood(e[0].serial_city).then(res => {\r\n    //         this.setState({\r\n    //           neighborhood: res.data.data,\r\n    //           city_id: e[0].serial_city\r\n    //         })\r\n    //       });\r\n    //     } else {\r\n    //       this.setState({\r\n    //         neighborhood: [],\r\n    //         cities: []\r\n    //       })\r\n    //     }\r\n    //   };\r\n\r\n    //   onNeighborhoodChange = (e) => {\r\n    //     let list = [];\r\n    //     e.forEach(element => {\r\n    //       list.push(element.neighborhood_serial);\r\n    //     });\r\n    //     this.setState({ neighborhood_id: list });\r\n    //   };\r\n\r\n    //   handlePageClick = data => {\r\n    //     let page = data.selected + 1;\r\n    //     this.setState({ page: page });\r\n    //     setTimeout(() => {\r\n    //       this.getItemsList(this.state.page_number, page);\r\n    //     }, 200);\r\n    //   };\r\n\r\n    //   getBadgeColor = role => {\r\n    //     switch (role) {\r\n    //       case \"جديد\":\r\n    //         return \"primary\";\r\n\r\n    //       case \"مستعمل\":\r\n    //         return \"success\";\r\n\r\n    //       default:\r\n    //         return \"primary\";\r\n    //     }\r\n    //   };\r\n\r\n    //   componentDidMount() {\r\n    //     this._ismounted = true;\r\n    //     this.updatePageData();\r\n    //   }\r\n    //   componentWillUnmount() {\r\n    //     this._ismounted = false;\r\n    //   }\r\n\r\n    //   componentDidUpdate() {\r\n    //     // this.updatePageData();\r\n    //   }\r\n\r\n    //   handlePageSizeChange = async (pageObj) => {\r\n    //     this.setState({ page: 1, page_number: pageObj.value });\r\n    //     this.getItemsList(pageObj.value, 1);\r\n    //   };\r\n\r\n    //   onSearch = () => {\r\n    //     this.getItemsList(this.state.page_number, 1);\r\n    //   }\r\n\r\n    //   exportAllData = async () => {\r\n    //     this.setState({ exportAllLoading: true });\r\n    //     getList(\r\n    //       1,\r\n    //       this.state.state_id,\r\n    //       this.state.status,\r\n    //       this.state.time,\r\n    //       this.state.estate_type_id,\r\n    //       this.state.area_estate_id,\r\n    //       this.state.dir_estate_id,\r\n    //       this.state.estate_price_id,\r\n    //       this.state.city_id,\r\n    //       this.state.neighborhood_id,\r\n    //       this.state.form_date,\r\n    //       this.state.to_date,\r\n    //       this.state.pagesCount,\r\n    //       this.uuid\r\n    //     ).then(res => {\r\n    //       let list = [...res.data.data.data];\r\n    //       let exportList = [];\r\n    //       list.forEach(element => {\r\n    //         exportList.push({\r\n    //           uuid: element.uuid,\r\n    //           address: element.address,\r\n    //           estate_type_name_web: element.estate.estate_type_name_web,\r\n    //           provider_name: element.provider.name,\r\n    //           status_name: element.status_name,\r\n    //           mobile: element.provider.country_code + element.provider.mobile,\r\n    //           date: formatDateTimeStamp(element.estate.created_at),\r\n    //           city_name: element.estate.city_name,\r\n    //           neighborhood_name: element.estate.neighborhood_name_web,\r\n    //           total_price: element.estate.total_price,\r\n    //           total_area: element.estate.total_area\r\n    //         });\r\n    //       });\r\n\r\n    //       exportexcel(exportList, 'Offers_');\r\n    //       this.setState({ exportAllLoading: false });\r\n\r\n    //     });\r\n    //   }\r\n\r\n    render() {\r\n        let { loading, estates } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: \"الرئيسية\", path: \"/\" },\r\n                        { name: \"قائمة العقارات \" }\r\n                    ]}\r\n                ></Breadcrumb>\r\n\r\n                <section className=\"contact-list\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 mb-4\">\r\n                            <div className=\"card text-left\">\r\n                                <div className=\"row px-4 mt-3\">\r\n                                    {estates.map(item => {\r\n                                        return (\r\n                                            <div className=\"col-md-4\">\r\n                                                <EstateCard key={item.id} imageUrl={item.image} />\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                {loading && <Loading></Loading>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default estateList;\r\n"],"sourceRoot":""}