{"version":3,"sources":["app/GullLayout/Layout1/Layout1Sidenav.jsx","app/services/MeanSideBar.js","app/GullLayout/SharedComponents/Footer.jsx","app/GullLayout/SharedComponents/LangSwicher.jsx","app/GullLayout/Layout1/Layout1Header.jsx","@gull/components/GullSearch.jsx","app/GullLayout/Layout1/Layout1.jsx"],"names":["Layout1Sidenav","windowListener","state","selectedItem","navOpen","secondaryNavOpen","navigationsList","requestNav","providerNav","onMainItemMouseEnter","item","type","setSelected","openSecSidenav","closeSecSidenav","onMainItemMouseLeave","setState","removeSelected","props","setLayoutSettings","settings","merge","layout1Settings","leftSidebar","other","isMobile","open","closeSidenav","openSidenav","a","this","http","get","requestBar","providersBar","data","navigationList","publishNavigationChange","user","role","window","innerWidth","addEventListener","target","removeEventListener","className","classList","map","i","active","onMouseEnter","onMouseLeave","key","path","to","icon","name","href","sub","menu","Component","withRouter","connect","setDefaultSettings","PropTypes","func","isRequired","logoutUser","layout","Footer","src","alt","LegacyWelcomeClass","t","withTranslation","Page","useTranslation","i18n","dir","lng","localStorageService","getLang","changeLanguage","location","reload","setItem","document","documentElement","setAttribute","onClick","LangSwicher","handleNavigatorsChange","event","Layout1Header","shorcutMenuList","link","text","notificationList","title","description","time","color","status","showSearchBox","handleMenuClick","toggleFullScreen","fullscreenEnabled","fullscreen","exitFullscreen","requestFullscreen","handleSearchBoxOpen","searchBox","style","margin","data-fullscreen","Dropdown","DropdownToggle","as","id","data-toggle","aria-haspopup","aria-expanded","DropdownMenu","GullSearch","debounceTimer","dummyProductList","category","currentPrice","prevPrice","imgUrl","query","searchList","handleSearch","persist","value","clearTimeout","setTimeout","filter","toLocaleLowerCase","match","toLowerCase","handleClose","placeholder","autoFocus","onChange","index","badge","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","containerClassName","subContainerClassName","activeClassName","Layout1","handleSearchBoxClose","routes","fallback","Loading","renderRoutes","footer","show"],"mappings":"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","file":"static/js/28.6d65c270.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { publishNavigationChange } from \"../../navigations\";\r\nimport { merge } from \"lodash\";\r\nimport { classList, isMobile } from \"@utils\";\r\nimport Srcollbar from \"react-perfect-scrollbar\";\r\nimport { DropDownMenu } from \"@gull\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ScrollBar from \"react-perfect-scrollbar\";\r\nimport { getMeanSideBar, getMeanSideBarUser } from '../../services/MeanSideBar'\r\n\r\nclass Layout1Sidenav extends Component {\r\n  windowListener = null;\r\n\r\n  state = {\r\n    selectedItem: null,\r\n    navOpen: true,\r\n    secondaryNavOpen: false,\r\n    navigationsList: [],\r\n    requestNav: [],\r\n    providerNav: []\r\n  };\r\n\r\n  onMainItemMouseEnter = item => {\r\n    if (item.type === \"dropDown\") {\r\n      this.setSelected(item);\r\n      this.openSecSidenav();\r\n    } else {\r\n      this.setSelected(item);\r\n      this.closeSecSidenav();\r\n    }\r\n  };\r\n\r\n\r\n  onMainItemMouseLeave = () => {\r\n    // this.closeSecSidenav();\r\n  };\r\n\r\n  setSelected = selectedItem => {\r\n    this.setState({ selectedItem });\r\n    // console.log(selectedItem);\r\n  };\r\n\r\n  removeSelected = () => {\r\n    this.setState({ selectedItem: null });\r\n    // console.log('removed');\r\n  };\r\n\r\n  openSecSidenav = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            secondaryNavOpen: true\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  closeSecSidenav = () => {\r\n    // console.log(\"closing sec sidenav\");\r\n    let { setLayoutSettings, settings } = this.props;\r\n    let other = {};\r\n\r\n    if (isMobile()) {\r\n      other.open = false;\r\n    }\r\n\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            ...other,\r\n            secondaryNavOpen: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  closeSidenav = () => {\r\n    // console.log(\"closing sidenav\");\r\n\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            open: false,\r\n            secondaryNavOpen: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  openSidenav = () => {\r\n    // console.log(\"opening sidenav\");\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            open: true\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n  async componentDidMount() {\r\n    if (this.state.selectedItem === null) this.closeSecSidenav();\r\n    // this.setState({ navigationsList: publishNavigationChange(this.props.user.type, 'ar') });\r\n    let { setLayoutSettings, settings } = this.props;\r\n    const requestBar = await getMeanSideBar();\r\n    const providersBar = await getMeanSideBarUser();\r\n    this.setState({ requestNav: await requestBar.data.data, providerNav: await providersBar.data.data });\r\n    // publishNavigationChange(this.props.user.role, 'ar')[1].sub = this.state.requestNav;\r\n    // console.log('iiii', publishNavigationChange(this.props.user.role, 'ar'))\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        navigationList: publishNavigationChange(this.props.user.role, 'ar')\r\n      })\r\n    );\r\n\r\n\r\n    if (window)\r\n      if (window.innerWidth < 1200) {\r\n        this.closeSidenav();\r\n      } else {\r\n        this.openSidenav();\r\n      }\r\n\r\n    this.windowListener = window.addEventListener(\"resize\", ({ target }) => {\r\n      if (window.innerWidth < 1200) {\r\n        this.closeSidenav();\r\n      } else {\r\n        this.openSidenav();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    if (this.windowListener) {\r\n      window.removeEventListener(\"resize\", this.windowListener);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let { settings } = this.props;\r\n    return (\r\n      <div className=\"side-content-wrap\">\r\n        <Srcollbar\r\n          className={classList({\r\n            \"sidebar-left o-hidden rtl-ps-none\": true,\r\n            open: settings.layout1Settings.leftSidebar.open\r\n          })}\r\n        // id=\"mainsidenav\"\r\n        >\r\n          <ul className=\"navigation-left\">\r\n            {settings.navigationList.map((item, i) => (\r\n              <li\r\n                className={classList({\r\n                  \"nav-item\": true,\r\n                  active: this.state.selectedItem === item\r\n                })}\r\n                onMouseEnter={() => {\r\n                  this.onMainItemMouseEnter(item);\r\n                }}\r\n                onMouseLeave={this.onMainItemMouseLeave}\r\n                key={i}\r\n              >\r\n                {item.path && item.type !== \"extLink\" && (\r\n                  <NavLink className=\"nav-item-hold\" to={item.path}>\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </NavLink>\r\n                )}\r\n                {item.path && item.type === \"extLink\" && (\r\n                  <a className=\"nav-item-hold\" href={item.path}>\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </a>\r\n                )}\r\n                {!item.path && (\r\n                  <div className=\"nav-item-hold\">\r\n                    <i className={`nav-icon ${item.icon}`}></i>\r\n                    <span className=\"nav-text\">{item.name}</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"triangle\"></div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n        </Srcollbar>\r\n\r\n        <ScrollBar\r\n          className={classList({\r\n            \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\r\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\r\n          })}\r\n        >\r\n          {this.state.selectedItem && this.state.selectedItem.sub && (\r\n            <DropDownMenu\r\n              menu={this.state.selectedItem.sub}\r\n              closeSecSidenav={this.closeSecSidenav}\r\n            ></DropDownMenu>\r\n          )}\r\n          <span></span>\r\n        </ScrollBar>\r\n        <div\r\n          onMouseEnter={this.closeSecSidenav}\r\n          className={classList({\r\n            \"sidebar-overlay\": true,\r\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\r\n          })}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n    setDefaultSettings,\r\n    logoutUser\r\n  })(Layout1Sidenav)\r\n);\r\n","import http from \"./../../http-common\";\n// Get Mean Side Bar\n\nexport const getMeanSideBar = () => {\n    return http.get(`/getMeanSideBar`);\n}\n\nexport const getMeanSideBarUser = () => {\n    return http.get(`/getMeanSideBarUser`);\n}\n","import React, { Fragment } from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"flex-grow-1\"></div>\r\n      <div className=\"app-footer\">\r\n\r\n        <div className=\"footer-bottom border-top pt-3 d-flex flex-column flex-sm-row align-items-center\">\r\n\r\n          <span className=\"flex-grow-1\"></span>\r\n          <div className=\"\">\r\n            <img className=\"logo float-right\" src=\"/assets/images/logo.png\" alt=\"\" />\r\n            <div className=\"float-right mt-2\">\r\n              <p className=\"m-0\">&copy; 2021 Aqarz</p>\r\n              <p className=\"m-0\">All rights reserved</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { merge } from \"lodash\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { classList } from \"@utils\";\r\nimport localStorageService from \"./../../services/localStorageService\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { navigationsAr, navigationsEn } from \"../../navigations\";\r\n\r\n\r\n// use hoc for class based components\r\nclass LegacyWelcomeClass extends Component {\r\n  render() {\r\n    const { t } = this.props;\r\n    return <h2>{t('inputs.name')}</h2>;\r\n  }\r\n}\r\n\r\n\r\nconst Welcome = withTranslation()(LegacyWelcomeClass);\r\n\r\nfunction Page() {\r\n  const { t, i18n } = useTranslation();\r\n  let dir = 'rtl';\r\n  const lng = localStorageService.getLang();\r\n  const changeLanguage = (lng) => {\r\n    window.location.reload();\r\n    i18n.changeLanguage(lng);\r\n    localStorageService.setItem(\"aqarz_lang\", lng);\r\n    localStorageService.getLang();\r\n    dir = (lng === \"en\") ? \"ltr\" : \"rtl\";\r\n\r\n    document.documentElement.setAttribute(\"lang\", lng);\r\n    document.documentElement.setAttribute(\"dir\", dir);\r\n  };\r\n  return (\r\n    <div className=\"lang-swicher\">\r\n      <div\r\n        className={classList({\r\n          \"lang\": true,\r\n          'd-none': lng === \"ar\"\r\n        })}\r\n        onClick={() => changeLanguage('ar')}\r\n      >\r\n        <img\r\n          src=\"/assets/images/sa.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div\r\n        className={classList({\r\n          \"lang\": true,\r\n          'd-none': !lng || lng === \"en\"\r\n        })}\r\n        onClick={() => changeLanguage('en')}\r\n      >\r\n        <img\r\n          src=\"/assets/images/us.svg\"\r\n          alt=\"\"\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass LangSwicher extends Component {\r\n  state = {};\r\n  handleNavigatorsChange = event => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    // setLayoutSettings(\r\n    //   merge({}, settings, {\r\n    //     navigationList: []\r\n    //   })\r\n    // );\r\n  };\r\n  render() {\r\n    return (\r\n      <div onClick={this.handleNavigatorsChange}>\r\n        <Page />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nLangSwicher.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n})(LangSwicher);\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport { getTimeDifference } from \"@utils\";\r\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { merge } from \"lodash\";\r\nimport MegaMenu from \"@gull/components/MegaMenu\";\r\nimport LangSwicher from \"../SharedComponents/LangSwicher\";\r\n\r\nclass Layout1Header extends Component {\r\n  state = {\r\n    shorcutMenuList: [\r\n      {\r\n        icon: \"i-Shop-4\",\r\n        link: \"#\",\r\n        text: \"Home\"\r\n      },\r\n      {\r\n        icon: \"i-Library\",\r\n        link: \"#\",\r\n        text: \"Ui Kits\"\r\n      },\r\n      {\r\n        icon: \"i-Drop\",\r\n        link: \"#\",\r\n        text: \"Apps\"\r\n      },\r\n      {\r\n        icon: \"i-File-Clipboard-File--Text\",\r\n        link: \"#\",\r\n        text: \"Form\"\r\n      },\r\n      {\r\n        icon: \"i-Checked-User\",\r\n        link: \"#\",\r\n        text: \"Sessions\"\r\n      },\r\n      {\r\n        icon: \"i-Ambulance\",\r\n        link: \"#\",\r\n        text: \"Support\"\r\n      }\r\n    ],\r\n    notificationList: [\r\n      {\r\n        icon: \"i-Speach-Bubble-6\",\r\n        title: \"New message\",\r\n        description: \"James: Hey! are you busy?\",\r\n        time: \"2019-10-30T02:10:18.931Z\",\r\n        color: \"primary\",\r\n        status: \"New\"\r\n      },\r\n      {\r\n        icon: \"i-Receipt-3\",\r\n        title: \"New order received\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"New\"\r\n      },\r\n      {\r\n        icon: \"i-Empty-Box\",\r\n        title: \"Product out of stock\",\r\n        description: \"1 Headphone, 3 iPhone\",\r\n        time: \"2019-05-10T02:10:18.931Z\",\r\n        color: \"danger\",\r\n        status: \"3\"\r\n      },\r\n      {\r\n        icon: \"i-Data-Power\",\r\n        title: \"Server up!\",\r\n        description: \"Server rebooted successfully\",\r\n        time: \"2019-03-10T02:10:18.931Z\",\r\n        color: \"success\",\r\n        status: \"3\"\r\n      }\r\n    ],\r\n    showSearchBox: false\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\r\n              ? true\r\n              : !settings.layout1Settings.leftSidebar.open,\r\n            secondaryNavOpen: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    if (document.fullscreenEnabled) {\r\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\r\n      else document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  handleSearchBoxOpen = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          searchBox: {\r\n            open: true\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\r\n\r\n    return (\r\n      <div className=\"main-header\">\r\n        <div className=\"logo\">\r\n          <img src=\"/assets/images/logo.png\" alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"menu-toggle\" onClick={this.handleMenuClick}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        {/* <LangSwicher></LangSwicher> */}\r\n\r\n        {/* <div className=\"d-none d-lg-flex align-items-center\">\r\n          <Dropdown className=\"mr-3\">\r\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden cursor-pointer\">\r\n              Mega Menu\r\n            </Dropdown.Toggle>\r\n\r\n            <div className=\"mega-menu\">\r\n              <Dropdown.Menu>\r\n                <MegaMenu></MegaMenu>\r\n              </Dropdown.Menu>\r\n            </div>\r\n          </Dropdown>\r\n\r\n          <div className=\"search-bar\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              onFocus={this.handleSearchBoxOpen}\r\n            />\r\n            <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>\r\n          </div>\r\n        </div> */}\r\n\r\n        <div style={{ margin: \"auto\" }}></div>\r\n\r\n        <div className=\"header-part-right\">\r\n          <i\r\n            className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\r\n            data-fullscreen\r\n            onClick={this.toggleFullScreen}\r\n          ></i>\r\n\r\n          {/* <Dropdown>\r\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden\">\r\n              <i\r\n                className=\"i-Safe-Box text-muted header-icon\"\r\n                role=\"button\"\r\n              ></i>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <div className=\"menu-icon-grid\">\r\n                {shorcutMenuList.map(menu => (\r\n                  <Link key={menu.text} to={menu.link}>\r\n                    <i className={menu.icon}></i> {menu.text}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </Dropdown.Menu>\r\n          </Dropdown> */}\r\n\r\n          <Dropdown>\r\n            {/* <Dropdown.Toggle as=\"span\" className=\"toggle-hidden cursor-pointer\">\r\n              <div\r\n                className=\"badge-top-container\"\r\n                role=\"button\"\r\n                id=\"dropdownNotification\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                <span className=\"badge badge-primary\">3</span>\r\n                <i className=\"i-Bell text-muted header-icon\"></i>\r\n              </div>\r\n            </Dropdown.Toggle> */}\r\n\r\n            {/* <DropdownMenu className=\"notification-dropdown rtl-ps-none\">\r\n              {notificationList.map((note, index) => (\r\n                <div key={index} className=\"dropdown-item d-flex\">\r\n                  <div className=\"notification-icon\">\r\n                    <i className={`${note.icon} text-${note.color} mr-1`}></i>\r\n                  </div>\r\n                  <div className=\"notification-details flex-grow-1\">\r\n                    <p className=\"m-0 d-flex align-items-center\">\r\n                      <span>{note.title}</span>\r\n                      <span\r\n                        className={`badge badge-pill badge-${note.color} ml-1 mr-1`}\r\n                      >\r\n                        {note.status}\r\n                      </span>\r\n                      <span className=\"flex-grow-1\"></span>\r\n                      <span className=\"text-small text-muted ml-auto\">\r\n                        {getTimeDifference(new Date(note.time))} ago\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"text-small text-muted m-0\">\r\n                      {note.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </DropdownMenu> */}\r\n          </Dropdown>\r\n\r\n          <div className=\"user col align-self-end\">\r\n            <Dropdown>\r\n              <DropdownToggle\r\n                as=\"span\"\r\n                className=\"toggle-hidden cursor-pointer\"\r\n              >\r\n                <img\r\n                  src=\"/assets/images/default-profile-icon.jpg\"\r\n                  id=\"userDropdown\"\r\n                  alt=\"\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <div className=\"dropdown-header\">\r\n                  <i className=\"i-Lock-User mr-1\"></i> {this.props.user.name}\r\n                </div>\r\n                <Link to=\"/\" className=\"dropdown-item cursor-pointer\">\r\n                  Account settings\r\n                </Link>\r\n                <Link\r\n                  to=\"/\"\r\n                  className=\"dropdown-item cursor-pointer\"\r\n                  onClick={this.props.logoutUser}\r\n                >\r\n                  Sign out\r\n                </Link>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Header.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings,\r\n    setDefaultSettings,\r\n    logoutUser\r\n  })(Layout1Header)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { classList } from \"@utils\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GullSearch extends Component {\r\n  debounceTimer = null;\r\n  dummyProductList = [\r\n    {\r\n      name: \"Headphone 1\",\r\n      category: \"Gadget\",\r\n      currentPrice: 300,\r\n      prevPrice: 400,\r\n      status: \"Sale\",\r\n      imgUrl: \"/assets/images/products/headphone-1.jpg\"\r\n    },\r\n    {\r\n      name: \"Bitz Headphone 1\",\r\n      category: \"Gadget\",\r\n      currentPrice: 300,\r\n      prevPrice: 400,\r\n      status: \"New\",\r\n      imgUrl: \"/assets/images/products/headphone-2.jpg\"\r\n    },\r\n    {\r\n      name: \"Sony Headphone 1\",\r\n      category: \"Gadget\",\r\n      currentPrice: 300,\r\n      prevPrice: 400,\r\n      status: \"New\",\r\n      imgUrl: \"/assets/images/products/headphone-3.jpg\"\r\n    },\r\n    {\r\n      name: \"Earphone 1\",\r\n      category: \"Gadget\",\r\n      currentPrice: 300,\r\n      prevPrice: 400,\r\n      status: \"New\",\r\n      imgUrl: \"/assets/images/products/headphone-4.jpg\"\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    query: \"\",\r\n    searchList: this.dummyProductList\r\n  };\r\n\r\n  handleSearch = event => {\r\n    event.persist();\r\n    this.setState({ query: event.target.value }, () => {\r\n      if (this.debounceTimer) clearTimeout(this.debounceTimer);\r\n      this.debounceTimer = setTimeout(() => {\r\n        this.setState({\r\n          searchList: this.dummyProductList.filter(item =>\r\n            item.name.toLocaleLowerCase().match(this.state.query.toLowerCase())\r\n          )\r\n        });\r\n      }, 250);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { open, handleClose } = this.props;\r\n    let { searchList } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classList({\r\n          \"search-ui\": true,\r\n          open: open\r\n        })}\r\n      >\r\n        <div className=\"search-header o-hidden\">\r\n          <img\r\n            src=\"/assets/images/logo.png\"\r\n            alt=\"\"\r\n            className=\"logo float-left\"\r\n          />\r\n          <button\r\n            className=\"search-close btn btn-icon bg-transparent float-right mt-2\"\r\n            onClick={handleClose}\r\n          >\r\n            <i className=\"i-Close-Window text-22 text-muted\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type here\"\r\n          className=\"search-input\"\r\n          autoFocus\r\n          onChange={this.handleSearch}\r\n        />\r\n\r\n        <div className=\"search-title\">\r\n          <span className=\"text-muted\">Search results</span>\r\n        </div>\r\n\r\n        <div className=\"search-results list-horizontal\">\r\n          {searchList.map((item, index) => (\r\n            <div key={index} className=\"list-item col-md-12 p-0\">\r\n              <div className=\"card o-hidden flex-row mb-4 d-flex\">\r\n                <div className=\"list-thumb d-flex\">\r\n                  {/* <!-- TUMBNAIL --> */}\r\n                  <img src={item.imgUrl} alt=\"\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 pl-2 d-flex\">\r\n                  <div className=\"card-body align-self-center d-flex flex-column justify-content-between align-items-lg-center flex-lg-row\">\r\n                    {/* <!-- OTHER DATA --> */}\r\n                    <Link to=\"/\" className=\"w-40 w-sm-100\">\r\n                      <div className=\"item-title\">{item.name}</div>\r\n                    </Link>\r\n                    <p className=\"m-0 text-muted text-small w-15 w-sm-100\">\r\n                      Gadget\r\n                    </p>\r\n                    <p className=\"m-0 text-muted text-small w-15 w-sm-100\">\r\n                      ${item.currentPrice}\r\n                      <del className=\"text-secondary\">${item.prevPrice}</del>\r\n                    </p>\r\n                    <p className=\"m-0 text-muted text-small w-15 w-sm-100 d-none d-lg-block item-badges\">\r\n                      <span\r\n                        className={classList({\r\n                          badge: true,\r\n                          \"badge-danger\": item.status === \"Sale\",\r\n                          \"badge-primary\": item.status === \"New\"\r\n                        })}\r\n                      >\r\n                        {item.status}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* <!-- PAGINATION CONTROL --> */}\r\n        <div className=\"px-3 mt-5 d-flex flex-row justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"<<\"}\r\n            nextLabel={\">>\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={5}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            // onPageChange={this.handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GullSearch;\r\n","import React, { Component, Suspense } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { renderRoutes } from \"react-router-config\";\r\n\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedComponents/Footer\";\r\nimport Layout1Header from \"./Layout1Header\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { classList } from \"@utils\";\r\nimport GullSearch from \"@gull/components/GullSearch\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { merge } from \"lodash\";\r\nimport Loading from \"@gull/components/GullLoadable/Loading\";\r\n\r\nclass Layout1 extends Component {\r\n  state = {};\r\n\r\n  handleSearchBoxClose = () => {\r\n    let { setLayoutSettings, settings } = this.props;\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        layout1Settings: {\r\n          searchBox: {\r\n            open: false\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { settings, routes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className={`app-admin-wrap layout-sidebar-large`}>\r\n          <Layout1Header></Layout1Header>\r\n          <Layout1Sidenav />\r\n          {/* sidebar */}\r\n\r\n          <div\r\n            className={classList({\r\n              \"main-content-wrap d-flex flex-column\": true,\r\n              \"sidenav-open\": settings.layout1Settings.leftSidebar.open\r\n            })}\r\n          >\r\n            <Suspense fallback={<Loading />}>\r\n              <div className=\"main-content\">{renderRoutes(routes)}</div>\r\n            </Suspense>\r\n            {(settings.footer.show && <Footer></Footer>)}\r\n          </div>\r\n        </div>\r\n        <GullSearch\r\n          open={settings.layout1Settings.searchBox.open}\r\n          handleClose={this.handleSearchBoxClose}\r\n        ></GullSearch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLayoutSettings })(Layout1);\r\n"],"sourceRoot":""}